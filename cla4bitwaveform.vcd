$date
	Sat Jul 19 21:12:24 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_cla8bit $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 1 # cin $end
$var reg 4 $ in0 [3:0] $end
$var reg 4 % in1 [3:0] $end
$scope module uut $end
$var wire 1 & c1 $end
$var wire 1 ' c2 $end
$var wire 1 ( c3 $end
$var wire 1 ) c4 $end
$var wire 1 # cin $end
$var wire 1 " cout $end
$var wire 4 * in0 [3:0] $end
$var wire 4 + in1 [3:0] $end
$var wire 4 , sum [3:0] $end
$var wire 4 - p [3:0] $end
$var wire 4 . g [3:0] $end
$scope module instance1 $end
$var wire 1 # cin $end
$var wire 1 & cout $end
$var wire 1 / g $end
$var wire 1 0 in0 $end
$var wire 1 1 in1 $end
$var wire 1 2 p $end
$var wire 1 3 sum $end
$upscope $end
$scope module instance2 $end
$var wire 1 & cin $end
$var wire 1 ' cout $end
$var wire 1 4 g $end
$var wire 1 5 in0 $end
$var wire 1 6 in1 $end
$var wire 1 7 p $end
$var wire 1 8 sum $end
$upscope $end
$scope module instance3 $end
$var wire 1 ' cin $end
$var wire 1 ( cout $end
$var wire 1 9 g $end
$var wire 1 : in0 $end
$var wire 1 ; in1 $end
$var wire 1 < p $end
$var wire 1 = sum $end
$upscope $end
$scope module instance4 $end
$var wire 1 ( cin $end
$var wire 1 ) cout $end
$var wire 1 > g $end
$var wire 1 ? in0 $end
$var wire 1 @ in1 $end
$var wire 1 A p $end
$var wire 1 B sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
b0 .
b0 -
b0 ,
b0 +
b0 *
0)
0(
0'
0&
b0 %
b0 $
0#
0"
b0 !
$end
#10000
b1 !
b1 ,
13
1#
#20000
18
1=
1B
12
17
1<
b1111 -
1A
b1111 !
b1111 ,
13
10
15
1:
1?
0#
b1111 $
b1111 *
#30000
1'
1=
1(
1B
1"
1)
1&
02
1/
07
14
0<
19
b0 -
0A
b1111 .
1>
b1111 !
b1111 ,
13
11
16
1;
1@
1#
b1111 %
b1111 +
#40000
18
0'
1B
0"
0)
0&
1=
0(
17
04
1A
0>
12
0/
b1111 -
1<
b0 .
09
b1111 !
b1111 ,
13
06
0@
00
0:
0#
b101 %
b101 +
b1010 $
b1010 *
#50000
1"
1)
0B
1(
0=
1'
08
1&
b1110 -
02
b1 .
1/
b1 !
b1 ,
13
16
1@
10
05
0?
1#
b1111 %
b1111 +
b1 $
b1 *
#60000
1"
1)
0B
1(
0=
1'
08
b0 !
b0 ,
03
1&
b1111 -
12
b0 .
0/
00
b0 $
b0 *
#70000
0'
0"
0)
18
1B
13
b1011 !
b1011 ,
0=
07
0A
02
1/
b0 -
0<
b101 .
19
06
0@
10
1:
b101 %
b101 +
b101 $
b101 *
#80000
